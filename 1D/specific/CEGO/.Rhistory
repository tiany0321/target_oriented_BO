#############iteration number
iter=seq(0,10)
i=7
#########sample the training data
set.seed(11)
sample.num0<-vector()
for(ii in 1:1000){
s <-  sample(1:(nrow(data.training)),40,replace=F,prob=NULL)
sample.num0<-as.data.frame(rbind(sample.num0,s))
}
size=c(round(0.02*nrow(data.training)))
sample.num<-sample.num0[,1:(size)]
split=sample.num[i,]
split=unlist(split)
training.data <- data.training[split,]
write.csv(training.data,"0train.csv")
training.data.x <- data.frame(training.data[,"x"])
colnames(training.data.x)="x"
training.data.y <-  data.frame(training.data[,"pro.es"])
colnames(training.data.y)="pro.es"
############virtual data
vir.total.data.x=data.frame(data.training[,"x"])
colnames(vir.total.data.x)="x"
data.all=data.frame(data.training)
virtual.data <- data.training[-split,]
rownames(virtual.data)<-1:nrow(virtual.data)
virtual.data.x=as.data.frame(virtual.data[,"x"])
colnames(virtual.data.x)="x"
##########km model prediction
gp = fn.gp(training.data.x, training.data.y,virtual.data.x)
gp.p = fn.gp(training.data.x, training.data.y,vir.total.data.x)
mean=as.data.frame(gp.p[,1])
mean=unlist(mean)
t=total.data.x
t=unlist(t)
yy0=cbind(total.data.x,as.data.frame(mean),as.data.frame(gp.p[,1]-gp.p[,2]),as.data.frame(gp.p[,1]+gp.p[,2]))
colnames(yy0)=c("x","mean","lower","upper")
write.csv(yy0,"yy0.csv")
head(yy0)
##########data frame
selector=1
data.OC.SD=matrix(,length(iter)-1,length(selector))
data.dis=matrix(,length(iter)-1,length(selector))
#EI=as.data.frame(EI)
SD=matrix(0,length(iter),1)
dis=matrix(0,length(iter),1)
########utility value
EI= fn.utility(data.training,estimator,training.data,gp.p)
EI[split,]=0
EI=na.omit(EI)
ee0=cbind(total.data.x,EI)
write.csv(ee0,"ee0.csv")
SD[1,1]= fn.OC(data.training,training.data)
dis[1,1]= fn.OC(data.training,training.data)
######recommend the option
num= which(EI[,"EI"]==max(EI[,"EI"]))
u=1
pic0=rep(1:10)
pic0=as.character(pic0)
pic1=rep("csv",10)
pic=paste(pic0,pic1,sep=".")
er0=rep(1:10)
er0=as.character(er0)
er1=rep("csv",10)
er=paste(er0,er1,sep="ee.")
train0=rep(1:10)
train0=as.character(train0)
train1=rep("csv",10)
train=paste(train0,train1,sep="train.")
num.count=c(split,num)
training.data0=training.data
virtual.data0=virtual.data
####start iteration
u=1
repeat{
########updated training data and virtual data
training.data0[nrow(training.data0)+1,]=virtual.data0[which(virtual.data0[,"order.num"]==num),]
virtual.data0=virtual.data0[-which(virtual.data0[,"order.num"]==num),]
rownames(training.data0)<-1:nrow(training.data0)
rownames(virtual.data0)<-1:nrow(virtual.data0)
training.data0.x <- data.frame(training.data0[,"x"])
colnames(training.data0.x)="x"
training.data0.y <-  data.frame(training.data0[,"pro.es"])
colnames(training.data0.y)="pro.es"
virtual.data0.x=as.data.frame(virtual.data0[,"x"])
colnames(virtual.data0.x)="x"
##########km model prediction
gp0 = fn.gp(training.data0.x, training.data0.y,virtual.data0.x)
gp0.p = fn.gp(training.data0.x, training.data0.y,vir.total.data.x)
########utility value
EI=fn.utility(data.training,estimator,training.data0,gp0.p)
EI=as.data.frame(EI)
EI[num.count,]=0
EI=na.omit(EI)
######recommend the option
num= which(EI[,"EI"]==max(EI[,"EI"]))
mean=as.data.frame(gp0.p[,1])
mean=unlist(mean)
t=total.data.x
t=unlist(t)
SD[u+1,]=fn.OC(data.training,training.data0)
dis[u+1,]=fn.dis(data.training, training.data0[nrow(training.data0),"es"])
if(max(EI)==0)
{break}
if (u==1|u==2|u==3|u==4|u==5|u==6)
{
yy0=cbind(total.data.x,as.data.frame(mean),as.data.frame(gp0.p[,1]-gp0.p[,2]),as.data.frame(gp0.p[,1]+gp0.p[,2]))
colnames(yy0)=c("x","mean","lower","upper")
write.csv(yy0,pic[u])
ee0=cbind(total.data.x,EI)
write.csv(ee0,er[u])
write.csv(training.data0,train[u])
print("training.data:")
print(training.data0)
}
num.count=c(num.count,num)
#######stopping criteria
if(u>=length(iter)-1)
break
#######points in the the tolerance of t
if(min(abs(training.data0[,"es"]-data.training[tar,"es"]))<=0.01*(max(data.training[,"es"])-min(data.training[,"es"])))
{
repeat{
u=u+1
yy0=cbind(total.data.x,as.data.frame(mean),as.data.frame(gp0.p[,1]-gp0.p[,2]),as.data.frame(gp0.p[,1]+gp0.p[,2]))
colnames(yy0)=c("x","mean","lower","upper")
write.csv(yy0,pic[u])
ee0=cbind(total.data.x,EI)
write.csv(ee0,er[u])
training.data0=rbind(training.data0,training.data0[nrow(training.data0),])
write.csv(training.data0,train[u])
if(u>6)
break
}
}
u=u+1
}
write.csv(dis,"dis_pre.csv")
write.csv(SD,"OC_pre.csv")
knitr::spin("EGO.R", format = "Rmd")
#knitr::purl("explore.Rmd", documentation = 2)
#knitr::spin("MOAF.R", format = "Rmd")
knitr::spin("function_abs_y-t.R", format = "Rmd")
knitr::spin("figure_EGO.R", format = "Rmd")
setwd("C:\\Users\\12758\\Desktop\\target_oriented_BO\\1D\\specific\\MOAF")
source("function_abs_y-t.R")
estimator=5########MOAF
##############create data
total.data.x <- as.data.frame(seq(0, 1, , 200))
colnames(total.data.x)="x"
write.csv(total.data.x,"total.data.x.csv")
total.data.y <- as.data.frame(f11_xiong(total.data.x))
colnames(total.data.y)="es"
order.data=as.data.frame(rep(1:nrow(total.data.x)))
colnames(order.data)="order.num"
data.training=cbind(total.data.x,total.data.y,order.data)
############Set a target
tar=24
tar.points=data.training[which(abs(data.training[,"es"]-data.training[tar,"es"])<=0.01*(max(data.training[,"es"])-min(data.training[,"es"]))),]
tar_data=data.training[tar,"es"]
data.training$pro.es=abs(data.training$es-tar_data)
write.csv(data.training$pro.es,"total.data.y.csv")
tar_data=min(data.training$pro.es)
write.csv(tar_data,"tar_data.csv")
print(paste("The targeted y:", tar_data))
#############iteration number
iter=seq(0,10)
i=7
#########sample the training data
set.seed(11)
sample.num0<-vector()
for(ii in 1:1000){
s <-  sample(1:(nrow(data.training)),40,replace=F,prob=NULL)
sample.num0<-as.data.frame(rbind(sample.num0,s))
}
size=c(round(0.02*nrow(data.training)))
sample.num<-sample.num0[,1:(size)]
split=sample.num[i,]
split=unlist(split)
training.data <- data.training[split,]
write.csv(training.data,"0train.csv")
training.data.x <- data.frame(training.data[,"x"])
colnames(training.data.x)="x"
training.data.y <-  data.frame(training.data[,"pro.es"])
colnames(training.data.y)="pro.es"
############virtual data
vir.total.data.x=data.frame(data.training[,"x"])
colnames(vir.total.data.x)="x"
data.all=data.frame(data.training)
virtual.data <- data.training[-split,]
rownames(virtual.data)<-1:nrow(virtual.data)
virtual.data.x=as.data.frame(virtual.data[,"x"])
colnames(virtual.data.x)="x"
##########km model prediction
gp = fn.gp(training.data.x, training.data.y,virtual.data.x)
gp.p = fn.gp(training.data.x, training.data.y,vir.total.data.x)
mean=as.data.frame(gp.p[,1])
mean=unlist(mean)
t=total.data.x
t=unlist(t)
yy0=cbind(total.data.x,as.data.frame(mean),as.data.frame(gp.p[,1]-gp.p[,2]),as.data.frame(gp.p[,1]+gp.p[,2]))
colnames(yy0)=c("x","mean","lower","upper")
write.csv(yy0,"yy0.csv")
head(yy0)
##########data frame
data.OC.SD=matrix(,length(iter)-1,length(selector))
data.dis=matrix(,length(iter)-1,length(selector))
EI=as.data.frame(EI)
SD=matrix(0,length(iter),1)
dis=matrix(0,length(iter),1)
########utility value
EI= fn.utility(data.training,estimator,training.data,gp.p)
EI[split,]=0
EI=na.omit(EI)
ee0=cbind(total.data.x,EI)
write.csv(ee0,"ee0.csv")
SD[1,1]= fn.OC(data.training,training.data)
dis[1,1]= fn.OC(data.training,training.data)
######recommend the option
num= which(EI[,"EI"]==max(EI[,"EI"]))
u=1
pic0=rep(1:10)
pic0=as.character(pic0)
pic1=rep("csv",10)
pic=paste(pic0,pic1,sep=".")
er0=rep(1:10)
er0=as.character(er0)
er1=rep("csv",10)
er=paste(er0,er1,sep="ee.")
train0=rep(1:10)
train0=as.character(train0)
train1=rep("csv",10)
train=paste(train0,train1,sep="train.")
num.count=c(split,num)
training.data0=training.data
virtual.data0=virtual.data
####start iteration
u=1
repeat{
########updated training data and virtual data
training.data0[nrow(training.data0)+1,]=virtual.data0[which(virtual.data0[,"order.num"]==num),]
virtual.data0=virtual.data0[-which(virtual.data0[,"order.num"]==num),]
rownames(training.data0)<-1:nrow(training.data0)
rownames(virtual.data0)<-1:nrow(virtual.data0)
training.data0.x <- data.frame(training.data0[,"x"])
colnames(training.data0.x)="x"
training.data0.y <-  data.frame(training.data0[,"pro.es"])
colnames(training.data0.y)="pro.es"
virtual.data0.x=as.data.frame(virtual.data0[,"x"])
colnames(virtual.data0.x)="x"
##########km model prediction
gp0 = fn.gp(training.data0.x, training.data0.y,virtual.data0.x)
gp0.p = fn.gp(training.data0.x, training.data0.y,vir.total.data.x)
########utility value
EI=fn.utility(data.training,estimator,training.data0,gp0.p)
EI=as.data.frame(EI)
EI[num.count,]=0
EI=na.omit(EI)
######recommend the option
num= which(EI[,"EI"]==max(EI[,"EI"]))
mean=as.data.frame(gp0.p[,1])
mean=unlist(mean)
t=total.data.x
t=unlist(t)
SD[u+1,]=fn.OC(data.training,training.data0)
dis[u+1,]=fn.dis(data.training, training.data0[nrow(training.data0),"es"])
if(max(EI)==0)
{break}
if (u==1|u==2|u==3|u==4|u==5|u==6)
{
yy0=cbind(total.data.x,as.data.frame(mean),as.data.frame(gp0.p[,1]-gp0.p[,2]),as.data.frame(gp0.p[,1]+gp0.p[,2]))
colnames(yy0)=c("x","mean","lower","upper")
write.csv(yy0,pic[u])
ee0=cbind(total.data.x,EI)
write.csv(ee0,er[u])
write.csv(training.data0,train[u])
print("training.data:")
print(training.data0)
}
num.count=c(num.count,num)
#######stopping criteria
if(u>=length(iter)-1)
break
#######points in the the tolerance of t
if(min(abs(training.data0[,"es"]-data.training[tar,"es"]))<=0.01*(max(data.training[,"es"])-min(data.training[,"es"])))
{
repeat{
u=u+1
yy0=cbind(total.data.x,as.data.frame(mean),as.data.frame(gp0.p[,1]-gp0.p[,2]),as.data.frame(gp0.p[,1]+gp0.p[,2]))
colnames(yy0)=c("x","mean","lower","upper")
write.csv(yy0,pic[u])
ee0=cbind(total.data.x,EI)
write.csv(ee0,er[u])
training.data0=rbind(training.data0,training.data0[nrow(training.data0),])
write.csv(training.data0,train[u])
if(u>6)
break
}
}
u=u+1
}
write.csv(dis,"dis_pre.csv")
write.csv(SD,"OC_pre.csv")
knitr::spin("MOAF.R", format = "Rmd")
#knitr::purl("explore.Rmd", documentation = 2)
#knitr::spin("MOAF.R", format = "Rmd")
knitr::spin("function_abs_y-t.R", format = "Rmd")
knitr::opts_chunk$set(fig.width = 10, fig.height = 5.5,out.width="100%", dpi = 300)
#print(knitr::opts_chunk$get("fig.width"))  #
#print(knitr::opts_chunk$get("fig.height"))  #
setwd("C:\\Users\\12758\\Desktop\\target_oriented_BO\\1D\\specific\\MOAF")
library(RColorBrewer)
###########Read data
aa0=read.csv("yy0.csv")
aa1=read.csv("1.csv")
aa5=read.csv("2.csv")
aa15=read.csv("3.csv")
aa25=read.csv("4.csv")
aa50=read.csv("5.csv")
bb0=read.csv("ee0.csv")
bb1=read.csv("1ee.csv")
bb5=read.csv("2ee.csv")
bb15=read.csv("3ee.csv")
bb25=read.csv("4ee.csv")
bb50=read.csv("5ee.csv")
cc0=read.csv("0train.csv")
cc1=read.csv("1train.csv")
cc2=read.csv("2train.csv")
cc3=read.csv("3train.csv")
cc4=read.csv("4train.csv")
cc5=read.csv("5train.csv")
cc6=read.csv("6train.csv")
tar_data=read.csv("tar_data.csv", row.names = 1)
total.data.x=read.csv("total.data.x.csv", row.names = 1)
total.data.y=read.csv("total.data.y.csv", row.names = 1)
ym=0.03########ylim of utility plot
##############1D function
#display.brewer.all(type = "seq")
library(RColorBrewer)
#display.brewer.all(type = "seq")
#pdf("MOAF.pdf",width=11.7,height=6)
par(mfrow = c(2,6),mai=c(0.07,0.05,0.07,0.05),omi=c(1.5,0.3,1.5,0.1))
#plot 1-1
plot(aa0[,"x"], aa0[,"mean"], type="l",  ylab="y",xlab="x",col="black", lwd=1.5, tck=0.01,font=2,font.lab=2,ylim=c(-1,0.65),cex.axis=1.2,cex.lab=1.2)
polygon(c(aa0[,"x"],rev(aa0[,"x"])), c(aa0[,"lower"], rev(aa0[,"upper"])), col=brewer.pal(9, "Purples")[3], border = brewer.pal(9, "Purples")[3])
lines(aa0[,"x"], aa0[,"mean"], type="l",  xlab="x", ylab="|y-t|", col=brewer.pal(9, "Purples")[8], lwd=1.5)
text(x = 0.93, y = -0.9, labels = "#=0",cex = 1.4,font=1.7 )
text(x = 0.5, y = -0.9, labels = "MOAF",cex = 1.4,font=1.7 )
par(new=T)
plot(unlist(total.data.x),unlist(total.data.y), xaxt="n",type="l", lty=2, ylab="y",xlab="x",col="red", lwd=1, tck=0.01,font=2,font.lab=2,ylim=c(-1,0.65),cex.axis=1.2,cex.lab=1.2)
points(unlist(cc0[,"x"]),unlist(cc0[,"pro.es"]), pch=20,col=brewer.pal(9, "Oranges")[5],cex=1.7)
abline(h=unlist(tar_data),type="l", lty=3, ylab="y",xlab="x",col=brewer.pal(9, "Oranges")[8], lwd=1, tck=0.01,font=2,font.lab=2,ylim=c(-1,0.65),cex.axis=1.2,cex.lab=1.2)
#plot 1-2
plot(aa1[,"x"], aa1[,"mean"], yaxt="n", type="l",  ylab="|y-t|",xlab="x",col="blue", lwd=1.5, tck=0.01,font=2,font.lab=2,ylim=c(-1,0.65),cex.axis=1.2,cex.lab=1.2)
polygon(c(aa1[,"x"],rev(aa1[,"x"])), c(aa1[,"lower"], rev(aa1[,"upper"])), col=brewer.pal(9, "Purples")[3], border = brewer.pal(9, "Purples")[3])
lines(aa1[,"x"], aa1[,"mean"], type="l",  xlab="x", ylab="y", col=brewer.pal(9, "Purples")[8], lwd=1.5)
text(x = 0.93, y =  -0.9, labels = "#=1",cex = 1.4,font=1.7 )
par(new=T)
plot(unlist(total.data.x),unlist(total.data.y), xaxt="n", yaxt="n",type="l", lty=2, ylab="y",xlab="x",col="red", lwd=1, tck=0.01,font=2,font.lab=2,ylim=c(-1,0.65),cex.axis=1.2,cex.lab=1.2)
points(unlist(cc0[,"x"]),unlist(cc0[,"pro.es"]), pch=20,col=brewer.pal(9, "Oranges")[5],cex=1.7)
points(unlist(cc1[5,"x"]),unlist(cc1[5,"pro.es"]), pch=20,col="red",cex=1.7)
abline(h=unlist(tar_data),type="l", lty=3, ylab="y",xlab="x",col=brewer.pal(9, "Oranges")[8], lwd=1, tck=0.01,font=2,font.lab=2,ylim=c(-1,0.65),cex.axis=1.2,cex.lab=1.2)
#plot 1-3
plot(aa5[,"x"], aa5[,"mean"], yaxt="n", type="l",  ylab="y",xlab="x",col="blue", lwd=1.5, tck=0.01,font=2,font.lab=2,ylim=c(-1,0.65),cex.axis=1.2,cex.lab=1.2)
polygon(c(aa5[,"x"],rev(aa5[,"x"])), c(aa5[,"lower"], rev(aa5[,"upper"])), col=brewer.pal(9, "Purples")[3], border = brewer.pal(9, "Purples")[3])
lines(aa5[,"x"], aa5[,"mean"], type="l",  xlab="x", ylab="y", col=brewer.pal(9, "Purples")[8], lwd=1.5)
text(x = 0.93, y =  -0.9, labels = "#=2",cex = 1.4,font=1.7 )
par(new=T)
plot(unlist(total.data.x),unlist(total.data.y), xaxt="n", yaxt="n",type="l", lty=2, ylab="y",xlab="x",col="red", lwd=1, tck=0.01,font=2,font.lab=2,ylim=c(-1,0.65),cex.axis=1.2,cex.lab=1.2)
points(unlist(cc1[,"x"]),unlist(cc1[,"pro.es"]), pch=20,col=brewer.pal(9, "Oranges")[5],cex=1.7)
points(unlist(cc2[6,"x"]),unlist(cc2[6,"pro.es"]), pch=20,col="red",cex=1.7)
abline(h=unlist(tar_data),type="l", lty=3, ylab="y",xlab="x",col=brewer.pal(9, "Oranges")[8], lwd=1, tck=0.01,font=2,font.lab=2,ylim=c(-1,0.65),cex.axis=1.2,cex.lab=1.2)
#plot 1-4
plot(aa15[,"x"], aa15[,"mean"], yaxt="n",type="l",  ylab="y",xlab="x",col="blue", lwd=1.5, tck=0.01,font=2,font.lab=2,ylim=c(-1,0.65),cex.axis=1.2,cex.lab=1.2)
polygon(c(aa15[,"x"],rev(aa15[,"x"])), c(aa15[,"lower"], rev(aa15[,"upper"])), col=brewer.pal(9, "Purples")[3], border = brewer.pal(9, "Purples")[3])
lines(aa15[,"x"], aa15[,"mean"], type="l",  xlab="x", ylab="y", col=brewer.pal(9, "Purples")[8], lwd=1.5)
text(x = 0.93, y =  -0.9, labels = "#=3",cex = 1.4,font=1.7 )
par(new=T)
plot(unlist(total.data.x),unlist(total.data.y), xaxt="n", yaxt="n",type="l", lty=2, ylab="y",xlab="x",col="red", lwd=1, tck=0.01,font=2,font.lab=2,ylim=c(-1,0.65),cex.axis=1.2,cex.lab=1.2)
points(unlist(cc2[,"x"]),unlist(cc2[,"pro.es"]), pch=20,col=brewer.pal(9, "Oranges")[5],cex=1.7)
points(unlist(cc3[7,"x"]),unlist(cc3[7,"pro.es"]), pch=20,col="red",cex=1.7)
abline(h=unlist(tar_data),type="l", lty=3, ylab="y",xlab="x",col=brewer.pal(9, "Oranges")[8], lwd=1, tck=0.01,font=2,font.lab=2,ylim=c(-1,0.65),cex.axis=1.2,cex.lab=1.2)
#plot 1-5
plot(aa25[,"x"], aa25[,"mean"], yaxt="n", type="l",  ylab="y",xlab="x",col="blue", lwd=1.5, tck=0.01,font=2,font.lab=2,ylim=c(-1,0.65),cex.axis=1.2,cex.lab=1.2)
polygon(c(aa25[,"x"],rev(aa25[,"x"])), c(aa25[,"lower"], rev(aa25[,"upper"])), col=brewer.pal(9, "Purples")[3], border = brewer.pal(9, "Purples")[3])
lines(aa25[,"x"], aa25[,"mean"], type="l",  xlab="x", ylab="y", col=brewer.pal(9, "Purples")[8], lwd=1.5)
text(x = 0.93, y =  -0.9,labels = "#=4",cex = 1.4,font=1.7 )
par(new=T)
plot(unlist(total.data.x),unlist(total.data.y), xaxt="n", yaxt="n",type="l", lty=2, ylab="y",xlab="x",col="red", lwd=1, tck=0.01,font=2,font.lab=2,ylim=c(-1,0.65),cex.axis=1.2,cex.lab=1.2)
points(unlist(cc3[,"x"]),unlist(cc3[,"pro.es"]), pch=20,col=brewer.pal(9, "Oranges")[5],cex=1.7)
points(unlist(cc4[8,"x"]),unlist(cc4[8,"pro.es"]), pch=20,col="red",cex=1.7)
abline(h=unlist(tar_data),type="l", lty=3, ylab="y",xlab="x",col=brewer.pal(9, "Oranges")[8], lwd=1, tck=0.01,font=2,font.lab=2,ylim=c(-1,0.65),cex.axis=1.2,cex.lab=1.2)
#plot 1-6
plot(aa50[,"x"], aa50[,"mean"], yaxt="n", type="l",  ylab="y",xlab="x",col="blue", lwd=1.5, tck=0.01,font=2,font.lab=2,ylim=c(-1,0.65),cex.axis=1.2,cex.lab=1.2)
polygon(c(aa50[,"x"],rev(aa50[,"x"])), c(aa50[,"lower"], rev(aa50[,"upper"])), col=brewer.pal(9, "Purples")[3], border = brewer.pal(9, "Purples")[3])
lines(aa50[,"x"], aa50[,"mean"], type="l",  xlab="x", ylab="y", col=brewer.pal(9, "Purples")[8], lwd=1.5)
text(x = 0.93, y =  -0.9, labels = "#=5",cex = 1.4,font=1.7 )
par(new=T)
plot(unlist(total.data.x),unlist(total.data.y), xaxt="n", yaxt="n",type="l", lty=2, ylab="y",xlab="x",col="red", lwd=1, tck=0.01,font=2,font.lab=2,ylim=c(-1,0.65),cex.axis=1.2,cex.lab=1.2)
points(unlist(cc5[,"x"]),unlist(cc5[,"pro.es"]), pch=20,col=brewer.pal(9, "Oranges")[5],cex=1.7)
points(unlist(cc6[9,"x"]),unlist(cc6[9,"pro.es"]), pch=20,col="red",cex=1.7)
abline(h=unlist(tar_data),type="l", lty=3, ylab="y",xlab="x",col=brewer.pal(9, "Oranges")[8], lwd=1, tck=0.01,font=2,font.lab=2,ylim=c(-1,0.65),cex.axis=1.2,cex.lab=1.2)
#dev.off()
knitr::spin("figure_MOAF.R", format = "Rmd")
knitr::opts_chunk$set(fig.width = 10, fig.height = 5.5,out.width="100%", dpi = 300)
#print(knitr::opts_chunk$get("fig.width"))  #
#print(knitr::opts_chunk$get("fig.height"))  #
setwd("C:\\Users\\12758\\Desktop\\target_oriented_BO\\1D\\specific\\MOAF")
library(RColorBrewer)
###########Read data
aa0=read.csv("yy0.csv")
aa1=read.csv("1.csv")
aa5=read.csv("2.csv")
aa15=read.csv("3.csv")
aa25=read.csv("4.csv")
aa50=read.csv("5.csv")
bb0=read.csv("ee0.csv")
bb1=read.csv("1ee.csv")
bb5=read.csv("2ee.csv")
bb15=read.csv("3ee.csv")
bb25=read.csv("4ee.csv")
bb50=read.csv("5ee.csv")
cc0=read.csv("0train.csv")
cc1=read.csv("1train.csv")
cc2=read.csv("2train.csv")
cc3=read.csv("3train.csv")
cc4=read.csv("4train.csv")
cc5=read.csv("5train.csv")
cc6=read.csv("6train.csv")
tar_data=read.csv("tar_data.csv", row.names = 1)
total.data.x=read.csv("total.data.x.csv", row.names = 1)
total.data.y=read.csv("total.data.y.csv", row.names = 1)
ym=0.03########ylim of utility plot
##############1D function
#display.brewer.all(type = "seq")
library(RColorBrewer)
#display.brewer.all(type = "seq")
pdf("MOAF.pdf",width=11.7,height=6)
par(mfrow = c(2,6),mai=c(0.07,0.05,0.07,0.05),omi=c(1.5,0.3,1.5,0.1))
#plot 1-1
plot(aa0[,"x"], aa0[,"mean"], type="l",  ylab="y",xlab="x",col="black", lwd=1.5, tck=0.01,font=2,font.lab=2,ylim=c(-1,0.65),cex.axis=1.2,cex.lab=1.2)
polygon(c(aa0[,"x"],rev(aa0[,"x"])), c(aa0[,"lower"], rev(aa0[,"upper"])), col=brewer.pal(9, "Purples")[3], border = brewer.pal(9, "Purples")[3])
lines(aa0[,"x"], aa0[,"mean"], type="l",  xlab="x", ylab="|y-t|", col=brewer.pal(9, "Purples")[8], lwd=1.5)
text(x = 0.93, y = -0.9, labels = "#=0",cex = 1.4,font=1.7 )
text(x = 0.5, y = -0.9, labels = "MOAF",cex = 1.4,font=1.7 )
par(new=T)
plot(unlist(total.data.x),unlist(total.data.y), xaxt="n",type="l", lty=2, ylab="y",xlab="x",col="red", lwd=1, tck=0.01,font=2,font.lab=2,ylim=c(-1,0.65),cex.axis=1.2,cex.lab=1.2)
points(unlist(cc0[,"x"]),unlist(cc0[,"pro.es"]), pch=20,col=brewer.pal(9, "Oranges")[5],cex=1.7)
abline(h=unlist(tar_data),type="l", lty=3, ylab="y",xlab="x",col=brewer.pal(9, "Oranges")[8], lwd=1, tck=0.01,font=2,font.lab=2,ylim=c(-1,0.65),cex.axis=1.2,cex.lab=1.2)
#plot 1-2
plot(aa1[,"x"], aa1[,"mean"], yaxt="n", type="l",  ylab="|y-t|",xlab="x",col="blue", lwd=1.5, tck=0.01,font=2,font.lab=2,ylim=c(-1,0.65),cex.axis=1.2,cex.lab=1.2)
polygon(c(aa1[,"x"],rev(aa1[,"x"])), c(aa1[,"lower"], rev(aa1[,"upper"])), col=brewer.pal(9, "Purples")[3], border = brewer.pal(9, "Purples")[3])
lines(aa1[,"x"], aa1[,"mean"], type="l",  xlab="x", ylab="y", col=brewer.pal(9, "Purples")[8], lwd=1.5)
text(x = 0.93, y =  -0.9, labels = "#=1",cex = 1.4,font=1.7 )
par(new=T)
plot(unlist(total.data.x),unlist(total.data.y), xaxt="n", yaxt="n",type="l", lty=2, ylab="y",xlab="x",col="red", lwd=1, tck=0.01,font=2,font.lab=2,ylim=c(-1,0.65),cex.axis=1.2,cex.lab=1.2)
points(unlist(cc0[,"x"]),unlist(cc0[,"pro.es"]), pch=20,col=brewer.pal(9, "Oranges")[5],cex=1.7)
points(unlist(cc1[5,"x"]),unlist(cc1[5,"pro.es"]), pch=20,col="red",cex=1.7)
abline(h=unlist(tar_data),type="l", lty=3, ylab="y",xlab="x",col=brewer.pal(9, "Oranges")[8], lwd=1, tck=0.01,font=2,font.lab=2,ylim=c(-1,0.65),cex.axis=1.2,cex.lab=1.2)
#plot 1-3
plot(aa5[,"x"], aa5[,"mean"], yaxt="n", type="l",  ylab="y",xlab="x",col="blue", lwd=1.5, tck=0.01,font=2,font.lab=2,ylim=c(-1,0.65),cex.axis=1.2,cex.lab=1.2)
polygon(c(aa5[,"x"],rev(aa5[,"x"])), c(aa5[,"lower"], rev(aa5[,"upper"])), col=brewer.pal(9, "Purples")[3], border = brewer.pal(9, "Purples")[3])
lines(aa5[,"x"], aa5[,"mean"], type="l",  xlab="x", ylab="y", col=brewer.pal(9, "Purples")[8], lwd=1.5)
text(x = 0.93, y =  -0.9, labels = "#=2",cex = 1.4,font=1.7 )
par(new=T)
plot(unlist(total.data.x),unlist(total.data.y), xaxt="n", yaxt="n",type="l", lty=2, ylab="y",xlab="x",col="red", lwd=1, tck=0.01,font=2,font.lab=2,ylim=c(-1,0.65),cex.axis=1.2,cex.lab=1.2)
points(unlist(cc1[,"x"]),unlist(cc1[,"pro.es"]), pch=20,col=brewer.pal(9, "Oranges")[5],cex=1.7)
points(unlist(cc2[6,"x"]),unlist(cc2[6,"pro.es"]), pch=20,col="red",cex=1.7)
abline(h=unlist(tar_data),type="l", lty=3, ylab="y",xlab="x",col=brewer.pal(9, "Oranges")[8], lwd=1, tck=0.01,font=2,font.lab=2,ylim=c(-1,0.65),cex.axis=1.2,cex.lab=1.2)
#plot 1-4
plot(aa15[,"x"], aa15[,"mean"], yaxt="n",type="l",  ylab="y",xlab="x",col="blue", lwd=1.5, tck=0.01,font=2,font.lab=2,ylim=c(-1,0.65),cex.axis=1.2,cex.lab=1.2)
polygon(c(aa15[,"x"],rev(aa15[,"x"])), c(aa15[,"lower"], rev(aa15[,"upper"])), col=brewer.pal(9, "Purples")[3], border = brewer.pal(9, "Purples")[3])
lines(aa15[,"x"], aa15[,"mean"], type="l",  xlab="x", ylab="y", col=brewer.pal(9, "Purples")[8], lwd=1.5)
text(x = 0.93, y =  -0.9, labels = "#=3",cex = 1.4,font=1.7 )
par(new=T)
plot(unlist(total.data.x),unlist(total.data.y), xaxt="n", yaxt="n",type="l", lty=2, ylab="y",xlab="x",col="red", lwd=1, tck=0.01,font=2,font.lab=2,ylim=c(-1,0.65),cex.axis=1.2,cex.lab=1.2)
points(unlist(cc2[,"x"]),unlist(cc2[,"pro.es"]), pch=20,col=brewer.pal(9, "Oranges")[5],cex=1.7)
points(unlist(cc3[7,"x"]),unlist(cc3[7,"pro.es"]), pch=20,col="red",cex=1.7)
abline(h=unlist(tar_data),type="l", lty=3, ylab="y",xlab="x",col=brewer.pal(9, "Oranges")[8], lwd=1, tck=0.01,font=2,font.lab=2,ylim=c(-1,0.65),cex.axis=1.2,cex.lab=1.2)
#plot 1-5
plot(aa25[,"x"], aa25[,"mean"], yaxt="n", type="l",  ylab="y",xlab="x",col="blue", lwd=1.5, tck=0.01,font=2,font.lab=2,ylim=c(-1,0.65),cex.axis=1.2,cex.lab=1.2)
polygon(c(aa25[,"x"],rev(aa25[,"x"])), c(aa25[,"lower"], rev(aa25[,"upper"])), col=brewer.pal(9, "Purples")[3], border = brewer.pal(9, "Purples")[3])
lines(aa25[,"x"], aa25[,"mean"], type="l",  xlab="x", ylab="y", col=brewer.pal(9, "Purples")[8], lwd=1.5)
text(x = 0.93, y =  -0.9,labels = "#=4",cex = 1.4,font=1.7 )
par(new=T)
plot(unlist(total.data.x),unlist(total.data.y), xaxt="n", yaxt="n",type="l", lty=2, ylab="y",xlab="x",col="red", lwd=1, tck=0.01,font=2,font.lab=2,ylim=c(-1,0.65),cex.axis=1.2,cex.lab=1.2)
points(unlist(cc3[,"x"]),unlist(cc3[,"pro.es"]), pch=20,col=brewer.pal(9, "Oranges")[5],cex=1.7)
points(unlist(cc4[8,"x"]),unlist(cc4[8,"pro.es"]), pch=20,col="red",cex=1.7)
abline(h=unlist(tar_data),type="l", lty=3, ylab="y",xlab="x",col=brewer.pal(9, "Oranges")[8], lwd=1, tck=0.01,font=2,font.lab=2,ylim=c(-1,0.65),cex.axis=1.2,cex.lab=1.2)
#plot 1-6
plot(aa50[,"x"], aa50[,"mean"], yaxt="n", type="l",  ylab="y",xlab="x",col="blue", lwd=1.5, tck=0.01,font=2,font.lab=2,ylim=c(-1,0.65),cex.axis=1.2,cex.lab=1.2)
polygon(c(aa50[,"x"],rev(aa50[,"x"])), c(aa50[,"lower"], rev(aa50[,"upper"])), col=brewer.pal(9, "Purples")[3], border = brewer.pal(9, "Purples")[3])
lines(aa50[,"x"], aa50[,"mean"], type="l",  xlab="x", ylab="y", col=brewer.pal(9, "Purples")[8], lwd=1.5)
text(x = 0.93, y =  -0.9, labels = "#=5",cex = 1.4,font=1.7 )
par(new=T)
plot(unlist(total.data.x),unlist(total.data.y), xaxt="n", yaxt="n",type="l", lty=2, ylab="y",xlab="x",col="red", lwd=1, tck=0.01,font=2,font.lab=2,ylim=c(-1,0.65),cex.axis=1.2,cex.lab=1.2)
points(unlist(cc5[,"x"]),unlist(cc5[,"pro.es"]), pch=20,col=brewer.pal(9, "Oranges")[5],cex=1.7)
points(unlist(cc6[9,"x"]),unlist(cc6[9,"pro.es"]), pch=20,col="red",cex=1.7)
abline(h=unlist(tar_data),type="l", lty=3, ylab="y",xlab="x",col=brewer.pal(9, "Oranges")[8], lwd=1, tck=0.01,font=2,font.lab=2,ylim=c(-1,0.65),cex.axis=1.2,cex.lab=1.2)
dev.off()
setwd("C:\\Users\\12758\\Desktop\\target_oriented_BO\\1D\\specific\\PureExp")
knitr::opts_chunk$set(fig.width = 10, fig.height = 5.5,out.width="100%", dpi = 300)
knitr::spin("figure_PureExp.R", format = "Rmd")
knitr::spin("function_y.R", format = "Rmd")
knitr::spin("PureExp.R", format = "Rmd")
#print(knitr::opts_chunk$get("fig.width"))  #
#print(knitr::opts_chunk$get("fig.height"))  #
setwd("C:\\Users\\12758\\Desktop\\target_oriented_BO\\1D\\specific\\CEGO")
knitr::opts_chunk$set(fig.width = 10, fig.height = 5.5,out.width="100%", dpi = 300)
knitr::spin("figure_CEGO.R", format = "Rmd")
knitr::spin("function_y.R", format = "Rmd")
knitr::spin("CEGO.R", format = "Rmd")
